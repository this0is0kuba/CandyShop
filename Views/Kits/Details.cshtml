@model CandyShop.Models.DBModels.Kit

@{
    string stockLevelAnnouncement = "out of stock";

    var stockLevelObject = ViewData["stockLevel"];
    if (stockLevelObject != null)
    {
        string stockLevelString = stockLevelObject.ToString();
        int stockLevelInt = int.Parse(stockLevelString);

        if (stockLevelInt > 1)
            stockLevelAnnouncement = "Low";

        if (stockLevelInt > 30)
            stockLevelAnnouncement = "Medium";

        if (stockLevelInt > 100)
            stockLevelAnnouncement = "High";
    }

    int ?limit = (int)ViewData["numberOfSweets"];
    if (limit == null)
        limit = 0;

}

<div>
    <h3>@ViewData["name"]</h3>
    <hr />
    <div class="container" style="display: flex; flex-wrap: wrap;">

        <div>
            <div style="width: 360px; height: 480px;">
            </div>
        </div>

        <div style="width: 10px; height:480px"> </div>

        <div>
            <div class="m-1">
                <h4>Description:</h4>
                @ViewData["description"]
            </div>
            <hr />
            <div class="m-1">
                <b>The kit consists of: </b>
                <ul>
                    @for (int i = 0; i < limit; i++) {
                        <li>
                            @ViewData["sweetnessName" + i]: @ViewData["sweetnessQuantity" + 1]   
                        </li>
                    }
                </ul>
            </div>
            <hr />
            <div class="m-1">
                <b>StockLevel:</b> @stockLevelAnnouncement
            </div>
            <div style="display: flex; flex-wrap: wrap;">
                <div class="m-1">
                    <b>Price:</b> @ViewData["price"] $
                </div>
                <button class="m-1 rounded" style="background-color: #FF78C4;">Add to basket</button>
            </div>
        </div>

    </div>
</div>