// <auto-generated />
using System;
using CandyShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CandyShop.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CandyShop.Models.DBModels.Kit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockLevel")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Kits");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CurrentPrice = 10m,
                            Description = "Wonderful box of lollipops.",
                            Discount = 0,
                            Name = "Lollipop Box",
                            StockLevel = 80
                        },
                        new
                        {
                            ID = 2,
                            CurrentPrice = 15m,
                            Description = "Wonderful box of gummy candies.",
                            Discount = 0,
                            Name = "Gummy Candy Box",
                            StockLevel = 4
                        });
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.KitContent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("KitID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SweetnessID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KitID");

                    b.HasIndex("SweetnessID");

                    b.ToTable("KitContent");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            KitID = 1,
                            Quantity = 2,
                            SweetnessID = 1
                        },
                        new
                        {
                            ID = 2,
                            KitID = 1,
                            Quantity = 2,
                            SweetnessID = 2
                        },
                        new
                        {
                            ID = 3,
                            KitID = 1,
                            Quantity = 2,
                            SweetnessID = 3
                        },
                        new
                        {
                            ID = 4,
                            KitID = 2,
                            Quantity = 15,
                            SweetnessID = 6
                        },
                        new
                        {
                            ID = 5,
                            KitID = 2,
                            Quantity = 15,
                            SweetnessID = 7
                        },
                        new
                        {
                            ID = 6,
                            KitID = 2,
                            Quantity = 15,
                            SweetnessID = 8
                        });
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.KitsOnly", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("KitID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KitID");

                    b.HasIndex("OrderID");

                    b.ToTable("KitsOnly");
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("HomeNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.Sweetness", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryName")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsGluten")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockLevel")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Sweets");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = 2,
                            CurrentPrice = 2m,
                            Description = "Lollipop with an amazing strawberry flavor.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Strawberry Lollipop",
                            StockLevel = 100
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = 2,
                            CurrentPrice = 3m,
                            Description = "Lollipop with an amazing smurf flavor.",
                            Discount = 0,
                            IsGluten = true,
                            IsVegan = false,
                            Name = "Smurf Lollipop",
                            StockLevel = 600
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = 2,
                            CurrentPrice = 2m,
                            Description = "Lollipop with an amazing orange flavor.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Orange Lollipop",
                            StockLevel = 100
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = 2,
                            CurrentPrice = 2m,
                            Description = "Lollipop with an amazing watermelon flavor.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Watermelon Lollipop",
                            StockLevel = 100
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = 2,
                            CurrentPrice = 3m,
                            Description = "Lollipop with an amazing bubblegum flavor.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "BubbleGum Lollipop",
                            StockLevel = 600
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = 1,
                            CurrentPrice = 0.5m,
                            Description = "Gummy candy with an amazing bubblegum flavor.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "BubbleGum Gummy Candy",
                            StockLevel = 1000
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = 1,
                            CurrentPrice = 0.5m,
                            Description = "Gummy candy with an amazing orange flavor.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Orange Gummy Candy",
                            StockLevel = 2000
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = 1,
                            CurrentPrice = 0.5m,
                            Description = "Gumy candy with an amazing strawberry flavor.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Strawberry Gummy Candy",
                            StockLevel = 30
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = 3,
                            CurrentPrice = 0.5m,
                            Description = "Amazing white chocolate.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "White Chocolate Candy",
                            StockLevel = 30
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = 3,
                            CurrentPrice = 0.5m,
                            Description = "Amazing black chocolate.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Black Chocolate Candy",
                            StockLevel = 3000
                        },
                        new
                        {
                            ID = 11,
                            CategoryName = 3,
                            CurrentPrice = 0.5m,
                            Description = "Amazing strawberry chocolate.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Strawberry Chocolate Candy",
                            StockLevel = 80
                        },
                        new
                        {
                            ID = 12,
                            CategoryName = 3,
                            CurrentPrice = 0.5m,
                            Description = "Amazing orange chocolate.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Orange Chocolate Candy",
                            StockLevel = 300
                        },
                        new
                        {
                            ID = 13,
                            CategoryName = 3,
                            CurrentPrice = 1m,
                            Description = "amazing toffee chocolate.",
                            Discount = 0,
                            IsGluten = false,
                            IsVegan = true,
                            Name = "Toffee Chocolate Candy",
                            StockLevel = 300
                        });
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.SweetsOnly", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SweetnessID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("SweetnessID");

                    b.ToTable("SweetsOnly");
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.KitContent", b =>
                {
                    b.HasOne("CandyShop.Models.DBModels.Kit", "Kit")
                        .WithMany("KitContents")
                        .HasForeignKey("KitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CandyShop.Models.DBModels.Sweetness", "Sweetness")
                        .WithMany("KitContents")
                        .HasForeignKey("SweetnessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kit");

                    b.Navigation("Sweetness");
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.KitsOnly", b =>
                {
                    b.HasOne("CandyShop.Models.DBModels.Kit", "Kit")
                        .WithMany("KitsOnly")
                        .HasForeignKey("KitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CandyShop.Models.DBModels.Order", "Order")
                        .WithMany("KitsOnly")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kit");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.SweetsOnly", b =>
                {
                    b.HasOne("CandyShop.Models.DBModels.Order", "Order")
                        .WithMany("SweetsOnly")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CandyShop.Models.DBModels.Sweetness", "Sweetness")
                        .WithMany("SweetsOnly")
                        .HasForeignKey("SweetnessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Sweetness");
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.Kit", b =>
                {
                    b.Navigation("KitContents");

                    b.Navigation("KitsOnly");
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.Order", b =>
                {
                    b.Navigation("KitsOnly");

                    b.Navigation("SweetsOnly");
                });

            modelBuilder.Entity("CandyShop.Models.DBModels.Sweetness", b =>
                {
                    b.Navigation("KitContents");

                    b.Navigation("SweetsOnly");
                });
#pragma warning restore 612, 618
        }
    }
}
